@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Installing Page";
}

<div class="bs-callout bs-callout-warning" id="callout-buttons-color-accessibility">
    <h4>Conveying meaning to assistive technologies</h4>
    <p>
        Using color to add meaning to a button only provides a visual indication, which
        will not be conveyed to users of assistive technologies – such as screen readers.
        Ensure that information denoted by the color is either obvious from the content itself
        (the visible text of the button), or is included through alternative means, such as
        additional text hidden with the <code>.sr-only</code> class.
    </p>
</div>

<table class="table table-condensed" style="display: none">
    <tr><th> Progress </th></tr>
</table>


<div class="progress">
    <div id="progressbar" class="progress-bar" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width:1%">
        0%
    </div>
</div>

<button type="button" onclick="Install()" class="btn btn-danger">Install</button>

<script language="javascript">
    var progressId = "";
    var lastItemInLog = "";

    $(document).ready(function () {

    });


    function Install() {
        $.post("/api/InstallHelper/Install?password=123456", function (data) {
            debugger;

            if (data.Key.Code !== 0) {
                alert("Error installing app: \n" + data.Key.Description);
                return;
            }

            progressId = data.Value.Value;

            $('table').show();
            $('table tr:last').after('<tr><td style="border-top: 0px;"> Staring install </td></tr>');

            //Refresh();
        });
    }

    function Refresh() {
        var stop = false;

        $.getJSON("/api/InstallHelper/GetInstallStatus?progressId=" + progressId, function (response) {
            for (var i = 0; i < response.length; i++) {
                var prop = response[i].Property;
                var value = response[i].Value;

                if (prop === "progress") {
                    $("#progressbar").css("width", value + "%");
                    $("#progressbar").html(value + "%");
                    if (value === "100") {
                        stop = true;
                    }
                }

                if (prop === "info") {
                    var items = value.split(";");

                    var logItem = "";
                    var pass = lastItemInLog.length > 1 ? false : true;
                    for (var j = 0; j < items.length; j++) {
                        if (pass) {
                            logItem = items[j];
                            $('table tr:last').after('<tr><td style="border-top: 0px;"> ' + logItem + ' </td></tr>');
                        } else {
                            if (items[j] === lastItemInLog) {
                                pass = true;
                            }
                        }
                    }
                    if (logItem !== "") {
                        lastItemInLog = logItem;
                    }
                }
            }

            if (!stop) {
                window.setTimeout(function () { Refresh(); }, 2000);
            }
        });
    }

</script>